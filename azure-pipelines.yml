trigger:
- 'main'

variables:
  buildConfiguration: 'Release'
  leaderboardRepository: 'leaderboard'
  webRepository: 'web'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'secret'
  containerRegistryConnection: 'RMS_Platform_POC_ACR'
  kubernetesServiceConnection: 'RMS_Platform_POC_Cluster'
  containerRegistryName: 'rmsplatformpocacr.azurecr.io'

stages:
- stage: 'Build'
  displayName: 'Build and push'
  pool:
    vmImage: 'ubuntu-latest'
  jobs:  
  - job: 'Build'
    displayName: 'Build job'    
    steps:
    - task: Docker@2
      displayName: 'Build and push the image to container registry'
      inputs:
        command: buildAndPush
        buildContext: $(Build.Repository.LocalPath)
        repository: $(webRepository)
        dockerfile: '$(Build.SourcesDirectory)/Tailspin.SpaceGame.Web/Dockerfile'
        containerRegistry: $(containerRegistryConnection)
        tags: |
          $(tag)
    - task: Docker@2
      displayName: 'Build and push the leaderboard image to container registry'
      inputs:
        command: buildAndPush
        buildContext: $(Build.Repository.LocalPath)
        repository: $(leaderboardRepository)
        dockerfile: '$(Build.SourcesDirectory)/Tailspin.SpaceGame.LeaderboardContainer/Dockerfile'
        containerRegistry: $(containerRegistryConnection)
        tags: |
          $(tag)  

    - publish: '$(Build.SourcesDirectory)/manifests'
      artifact: manifests       

- stage: 'Deploy'
  displayName: 'Deploy the containers'
  dependsOn: Build
  pool:
    vmImage: 'ubuntu-latest'  
  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: 'demo.default'
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: manifests
          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: createSecret
              secretName: $(imagePullSecret)
              dockerRegistryEndpoint: $()
              kubernetesServiceConnection: $(kubernetesServiceConnection)
              namespace: 'default'
          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy
              kubernetesServiceConnection: $(kubernetesServiceConnection)
              namespace: 'default'
              manifests: |
                $(Pipeline.Workspace)/manifests/deployment.yml
                $(Pipeline.Workspace)/manifests/service.yml
              imagePullSecrets: |
                $(imagePullSecret)
              containers: |
                $(ContainerRegistryName)/$(webRepository):$(tag)
                $(ContainerRegistryName)/$(leaderboardRepository):$(tag)


